{"version": {"word": "version", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "snip": "v:version > ${1} || (v:version == $1 && has('patch${2}'))", "user_data": "{\"snippet_trigger\": \"version\", \"snippet\": \"v:version > ${1} || (v:version == $1 && has('patch${2}'))\"}", "description": "v:version > ${1} || (v:version == $1 && has('patch${2}'))", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 229, "menu_template": "vim-version-check", "real_name": "version", "action__pattern": "^snippet\\s\\+version$", "menu_abbr": "vim-version-check"}, "autoload": {"word": "autoload", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "user_data": "{\"snippet_trigger\": \"autoload\", \"snippet\": \"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\\n${0}\\nendfunction\"}", "description": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 120, "menu_template": "autoload func endfunc", "real_name": "autoload", "action__pattern": "^snippet\\s\\+autoload$", "menu_abbr": "autoload func endfunc"}, "echomsg": {"word": "echomsg", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "echomsg string(${1:TARGET})", "user_data": "{\"snippet_trigger\": \"echomsg\", \"snippet\": \"echomsg string(${1:TARGET})\"}", "description": "echomsg string(${1:TARGET})", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 68, "menu_template": "", "real_name": "echomsg", "action__pattern": "^snippet\\s\\+echomsg$", "menu_abbr": ""}, "cpoptions": {"word": "cpoptions", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo", "menu_template": "let s:save_cpo = &cpo | set cpo&vim", "user_data": "{\"snippet_trigger\": \"save_cpoptions\", \"snippet\": \"let s:save_cpo = &cpo\\nset cpo&vim\\n\\n${0}\\n\\nlet &cpo = s:save_cpo\\nunlet s:save_cpo\"}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 128, "description": "let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo", "real_name": "save_cpoptions", "action__pattern": "^snippet\\s\\+save_cpoptions$", "menu_abbr": "let s:save_cpo = &cpo | set cpo&vim"}, "lua": {"word": "lua", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "lua << EOF\n${0}\nEOF", "user_data": "{\"snippet_trigger\": \"lua\", \"snippet\": \"lua << EOF\\n${0}\\nEOF\"}", "description": "lua << EOF\n${0}\nEOF", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 185, "menu_template": "lua <<EOF | EOF", "real_name": "lua", "action__pattern": "^snippet\\s\\+lua$", "menu_abbr": "lua <<EOF | EOF"}, "b:undo_ftplugin": {"word": "b:undo_ftplugin", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "snip": "if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", "menu_template": "if !exists('b:undo_ftplugin')", "user_data": "{\"snippet_trigger\": \"undo_ftplugin\", \"snippet\": \"if !exists('b:undo_ftplugin')\\nlet b:undo_ftplugin = ''\\nendif\\n\\n${1}\\n\\nlet b:undo_ftplugin .= '\\n\\\\ | setlocal ${2:#:option_name1< option_name2<...}\\n\\\\'\"}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 156, "description": "if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", "real_name": "undo_ftplugin", "action__pattern": "^snippet\\s\\+undo_ftplugin$", "menu_abbr": "if !exists('b:undo_ftplugin')"}, "for": {"word": "for", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "for ${1:#:var} in ${2:#:list}\n${0:TARGET}\nendfor", "user_data": "{\"snippet_trigger\": \"for\", \"snippet\": \"for ${1:#:var} in ${2:#:list}\\n${0:TARGET}\\nendfor\"}", "description": "for ${1:#:var} in ${2:#:list}\n${0:TARGET}\nendfor", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 22, "menu_template": "for in endfor", "real_name": "for", "action__pattern": "^snippet\\s\\+for$", "menu_abbr": "for in endfor"}, "python3": {"word": "python3", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "python3 << EOF\n${0}\nEOF", "user_data": "{\"snippet_trigger\": \"python3\", \"snippet\": \"python3 << EOF\\n${0}\\nEOF\"}", "description": "python3 << EOF\n${0}\nEOF", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 177, "menu_template": "python3 <<EOF | EOF", "real_name": "python3", "action__pattern": "^snippet\\s\\+python3$", "menu_abbr": "python3 <<EOF | EOF"}, "modeline": {"word": "modeline", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "snip": "\" vim: ${0:foldmethod=marker}", "user_data": "{\"snippet_trigger\": \"modeline\", \"snippet\": \"\\\" vim: ${0:foldmethod=marker}\"}", "description": "\" vim: ${0:foldmethod=marker}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 152, "menu_template": "\" vim: {modeline}", "real_name": "modeline", "action__pattern": "^snippet\\s\\+modeline$", "menu_abbr": "\" vim: {modeline}"}, "NeoBundleLazy": {"word": "NeoBundleLazy", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "snip": "NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", "user_data": "{\"snippet_trigger\": \"NeoBundleLazy\", \"snippet\": \"NeoBundleLazy '`getreg('+')=='' ? '<\\\\`0\\\\`>' : getreg('+')`', {\\n\\\\ ${0}\\n\\\\ }\"}", "description": "NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 105, "menu_template": "NeoBundleLazy ''", "real_name": "NeoBundleLazy", "action__pattern": "^snippet\\s\\+NeoBundleLazy$", "menu_abbr": "NeoBundleLazy ''"}, "save_option": {"word": "save_option", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "let $1_save = &${1}\nlet &$1 = ${2}\ntry\n${0}\nfinally\nlet &$1 = $1_save\nendtry", "user_data": "{\"snippet_trigger\": \"save_option\", \"snippet\": \"let $1_save = &${1}\\nlet &$1 = ${2}\\ntry\\n${0}\\nfinally\\nlet &$1 = $1_save\\nendtry\"}", "description": "let $1_save = &${1}\nlet &$1 = ${2}\ntry\n${0}\nfinally\nlet &$1 = $1_save\nendtry", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 213, "menu_template": "use option save", "real_name": "save_option", "action__pattern": "^snippet\\s\\+save_option$", "menu_abbr": "use option save"}, "p": {"word": "p", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "echomsg string([${0:TARGET}])", "user_data": "{\"snippet_trigger\": \"p\", \"snippet\": \"echomsg string([${0:TARGET}])\"}", "description": "echomsg string([${0:TARGET}])", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 224, "menu_template": "debug-echomsg", "real_name": "p", "action__pattern": "^snippet\\s\\+p$", "menu_abbr": "debug-echomsg"}, "catch": {"word": "catch", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}", "user_data": "{\"snippet_trigger\": \"catch\", \"snippet\": \"catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\\\\\}\\\\}/}\"}", "description": "catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 63, "menu_template": "catch /pattern/", "real_name": "catch", "action__pattern": "^snippet\\s\\+catch$", "menu_abbr": "catch /pattern/"}, "func": {"word": "func", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction", "menu_template": "func endfunc", "user_data": "{\"snippet_trigger\": \"function\", \"snippet\": \"function! ${1:#:func_name}(${2}) abort\\n${0:TARGET}\\nendfunction\"}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 36, "description": "function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction", "real_name": "function", "action__pattern": "^snippet\\s\\+function$", "menu_abbr": "func endfunc"}, "save_cpoptions": {"word": "save_cpoptions", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo", "user_data": "{\"snippet_trigger\": \"save_cpoptions\", \"snippet\": \"let s:save_cpo = &cpo\\nset cpo&vim\\n\\n${0}\\n\\nlet &cpo = s:save_cpo\\nunlet s:save_cpo\"}", "description": "let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 128, "menu_template": "let s:save_cpo = &cpo | set cpo&vim", "real_name": "save_cpoptions", "action__pattern": "^snippet\\s\\+save_cpoptions$", "menu_abbr": "let s:save_cpo = &cpo | set cpo&vim"}, "python": {"word": "python", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "python << EOF\n${0}\nEOF", "user_data": "{\"snippet_trigger\": \"python\", \"snippet\": \"python << EOF\\n${0}\\nEOF\"}", "description": "python << EOF\n${0}\nEOF", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 169, "menu_template": "python <<EOF | EOF", "real_name": "python", "action__pattern": "^snippet\\s\\+python$", "menu_abbr": "python <<EOF | EOF"}, "neobundle": {"word": "neobundle", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "snip": "NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", "menu_template": "NeoBundle ''", "user_data": "{\"snippet_trigger\": \"NeoBundle\", \"snippet\": \"NeoBundle '`getreg('+')=='' ? '<\\\\`0\\\\`>' : getreg('+')`'${0}\"}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 100, "description": "NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", "real_name": "NeoBundle", "action__pattern": "^snippet\\s\\+NeoBundle$", "menu_abbr": "NeoBundle ''"}, "function": {"word": "function", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction", "user_data": "{\"snippet_trigger\": \"function\", \"snippet\": \"function! ${1:#:func_name}(${2}) abort\\n${0:TARGET}\\nendfunction\"}", "description": "function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 36, "menu_template": "func endfunc", "real_name": "function", "action__pattern": "^snippet\\s\\+function$", "menu_abbr": "func endfunc"}, "py": {"word": "py", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "python << EOF\n${0}\nEOF", "menu_template": "python <<EOF | EOF", "user_data": "{\"snippet_trigger\": \"python\", \"snippet\": \"python << EOF\\n${0}\\nEOF\"}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 169, "description": "python << EOF\n${0}\nEOF", "real_name": "python", "action__pattern": "^snippet\\s\\+python$", "menu_abbr": "python <<EOF | EOF"}, "try": {"word": "try", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "try\n${1:TARGET}\ncatch /${2:#:pattern}/\n${3}\nendtry", "user_data": "{\"snippet_trigger\": \"try\", \"snippet\": \"try\\n${1:TARGET}\\ncatch /${2:#:pattern}/\\n${3}\\nendtry\"}", "description": "try\n${1:TARGET}\ncatch /${2:#:pattern}/\n${3}\nendtry", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 44, "menu_template": "try endtry", "real_name": "try", "action__pattern": "^snippet\\s\\+try$", "menu_abbr": "try endtry"}, "neobundlelazy": {"word": "neobundlelazy", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "snip": "NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", "menu_template": "NeoBundleLazy ''", "user_data": "{\"snippet_trigger\": \"NeoBundleLazy\", \"snippet\": \"NeoBundleLazy '`getreg('+')=='' ? '<\\\\`0\\\\`>' : getreg('+')`', {\\n\\\\ ${0}\\n\\\\ }\"}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 105, "description": "NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", "real_name": "NeoBundleLazy", "action__pattern": "^snippet\\s\\+NeoBundleLazy$", "menu_abbr": "NeoBundleLazy ''"}, "version_new": {"word": "version_new", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "snip": "has('patch-${1}')", "user_data": "{\"snippet_trigger\": \"version_new\", \"snippet\": \"has('patch-${1}')\"}", "description": "has('patch-${1}')", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 233, "menu_template": "vim-version-check-new", "real_name": "version_new", "action__pattern": "^snippet\\s\\+version_new$", "menu_abbr": "vim-version-check-new"}, "tryfinally": {"word": "tryfinally", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "try\n${1:TARGET}\nfinally\n${2}\nendtry", "user_data": "{\"snippet_trigger\": \"tryfinally\", \"snippet\": \"try\\n${1:TARGET}\\nfinally\\n${2}\\nendtry\"}", "description": "try\n${1:TARGET}\nfinally\n${2}\nendtry", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 53, "menu_template": "try ... finally ... endtry", "real_name": "tryfinally", "action__pattern": "^snippet\\s\\+tryfinally$", "menu_abbr": "try ... finally ... endtry"}, "log": {"word": "log", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "echomsg string(${1:TARGET})", "menu_template": "", "user_data": "{\"snippet_trigger\": \"echomsg\", \"snippet\": \"echomsg string(${1:TARGET})\"}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 68, "description": "echomsg string(${1:TARGET})", "real_name": "echomsg", "action__pattern": "^snippet\\s\\+echomsg$", "menu_abbr": ""}, "bundle_hooks": {"word": "bundle_hooks", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "snip": "let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n${0}\nendfunction\nunlet s:hooks", "user_data": "{\"snippet_trigger\": \"bundle_hooks\", \"snippet\": \"let s:hooks = neobundle#get_hooks('${1}')\\nfunction! s:hooks.on_source(bundle) abort\\n${0}\\nendfunction\\nunlet s:hooks\"}", "description": "let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n${0}\nendfunction\nunlet s:hooks", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 112, "menu_template": "neobundle hooks", "real_name": "bundle_hooks", "action__pattern": "^snippet\\s\\+bundle_hooks$", "menu_abbr": "neobundle hooks"}, "save_register": {"word": "save_register", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n${0}\nfinally\ncall setreg('$1', save_reg_$1, save_regtype_$1)\nendtry", "user_data": "{\"snippet_trigger\": \"save_register\", \"snippet\": \"let save_reg_$1 = getreg('${1}')\\nlet save_regtype_$1 = getregtype('$1')\\ntry\\n${0}\\nfinally\\ncall setreg('$1', save_reg_$1, save_regtype_$1)\\nendtry\"}", "description": "let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n${0}\nfinally\ncall setreg('$1', save_reg_$1, save_regtype_$1)\nendtry", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 202, "menu_template": "use register save", "real_name": "save_register", "action__pattern": "^snippet\\s\\+save_register$", "menu_abbr": "use register save"}, "s:save_cpo": {"word": "s:save_cpo", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo", "menu_template": "let s:save_cpo = &cpo | set cpo&vim", "user_data": "{\"snippet_trigger\": \"save_cpoptions\", \"snippet\": \"let s:save_cpo = &cpo\\nset cpo&vim\\n\\n${0}\\n\\nlet &cpo = s:save_cpo\\nunlet s:save_cpo\"}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 128, "description": "let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo", "real_name": "save_cpoptions", "action__pattern": "^snippet\\s\\+save_cpoptions$", "menu_abbr": "let s:save_cpo = &cpo | set cpo&vim"}, "command": {"word": "command", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "command! ${1:#:command_name} call ${2:#:func_name}", "user_data": "{\"snippet_trigger\": \"command\", \"snippet\": \"command! ${1:#:command_name} call ${2:#:func_name}\"}", "description": "command! ${1:#:command_name} call ${2:#:func_name}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 73, "menu_template": "command call function", "real_name": "command", "action__pattern": "^snippet\\s\\+command$", "menu_abbr": "command call function"}, "while": {"word": "while", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "while ${1:#:condition}\n${0:TARGET}\nendwhile", "user_data": "{\"snippet_trigger\": \"while\", \"snippet\": \"while ${1:#:condition}\\n${0:TARGET}\\nendwhile\"}", "description": "while ${1:#:condition}\n${0:TARGET}\nendwhile", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 29, "menu_template": "while endwhile", "real_name": "while", "action__pattern": "^snippet\\s\\+while$", "menu_abbr": "while endwhile"}, "if": {"word": "if", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "if ${1:#:condition}\n${0:TARGET}\nendif", "user_data": "{\"snippet_trigger\": \"if\", \"snippet\": \"if ${1:#:condition}\\n${0:TARGET}\\nendif\"}", "description": "if ${1:#:condition}\n${0:TARGET}\nendif", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 1, "menu_template": "if endif", "real_name": "if", "action__pattern": "^snippet\\s\\+if$", "menu_abbr": "if endif"}, "afunc": {"word": "afunc", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "menu_template": "autoload func endfunc", "user_data": "{\"snippet_trigger\": \"autoload\", \"snippet\": \"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\\n${0}\\nendfunction\"}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 120, "description": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "real_name": "autoload", "action__pattern": "^snippet\\s\\+autoload$", "menu_abbr": "autoload func endfunc"}, "loaded": {"word": "loaded", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", "menu_template": "if exists('g:loaded_{plugin-name}')", "user_data": "{\"snippet_trigger\": \"g:loaded\", \"snippet\": \"if exists('g:loaded_${1}')\\nfinish\\nendif\\n\\n${0}\\n\\nlet g:loaded_$1 = 1\"}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 140, "description": "if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", "real_name": "g:loaded", "action__pattern": "^snippet\\s\\+g:loaded$", "menu_abbr": "if exists('g:loaded_{plugin-name}')"}, "g:loaded": {"word": "g:loaded", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", "user_data": "{\"snippet_trigger\": \"g:loaded\", \"snippet\": \"if exists('g:loaded_${1}')\\nfinish\\nendif\\n\\n${0}\\n\\nlet g:loaded_$1 = 1\"}", "description": "if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 140, "menu_template": "if exists('g:loaded_{plugin-name}')", "real_name": "g:loaded", "action__pattern": "^snippet\\s\\+g:loaded$", "menu_abbr": "if exists('g:loaded_{plugin-name}')"}, "py3": {"word": "py3", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "python3 << EOF\n${0}\nEOF", "menu_template": "python3 <<EOF | EOF", "user_data": "{\"snippet_trigger\": \"python3\", \"snippet\": \"python3 << EOF\\n${0}\\nEOF\"}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 177, "description": "python3 << EOF\n${0}\nEOF", "real_name": "python3", "action__pattern": "^snippet\\s\\+python3$", "menu_abbr": "python3 <<EOF | EOF"}, "afunction": {"word": "afunction", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "menu_template": "autoload func endfunc", "user_data": "{\"snippet_trigger\": \"autoload\", \"snippet\": \"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\\n${0}\\nendfunction\"}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 120, "description": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "real_name": "autoload", "action__pattern": "^snippet\\s\\+autoload$", "menu_abbr": "autoload func endfunc"}, "ifelse": {"word": "ifelse", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "if ${1:#:condition}\n${2:TARGET}\nelse\n${3}\nendif", "user_data": "{\"snippet_trigger\": \"ifelse\", \"snippet\": \"if ${1:#:condition}\\n${2:TARGET}\\nelse\\n${3}\\nendif\"}", "description": "if ${1:#:condition}\n${2:TARGET}\nelse\n${3}\nendif", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 13, "menu_template": "if else endif", "real_name": "ifelse", "action__pattern": "^snippet\\s\\+ifelse$", "menu_abbr": "if else endif"}, "redir": {"word": "redir", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "redir => ${1:#:var}\n\t\t${2::TARGET}\n\tredir END", "user_data": "{\"snippet_trigger\": \"redir\", \"snippet\": \"redir => ${1:#:var}\\n\\t\\t${2::TARGET}\\n\\tredir END\"}", "description": "redir => ${1:#:var}\n\t\t${2::TARGET}\n\tredir END", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 93, "menu_template": "redir => var", "real_name": "redir", "action__pattern": "^snippet\\s\\+redir$", "menu_abbr": "redir => var"}, "tryf": {"word": "tryf", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "try\n${1:TARGET}\nfinally\n${2}\nendtry", "menu_template": "try ... finally ... endtry", "user_data": "{\"snippet_trigger\": \"tryfinally\", \"snippet\": \"try\\n${1:TARGET}\\nfinally\\n${2}\\nendtry\"}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 53, "description": "try\n${1:TARGET}\nfinally\n${2}\nendtry", "real_name": "tryfinally", "action__pattern": "^snippet\\s\\+tryfinally$", "menu_abbr": "try ... finally ... endtry"}, "elseif": {"word": "elseif", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "elseif ${1:#:condition}\n${0:TARGET}", "user_data": "{\"snippet_trigger\": \"elseif\", \"snippet\": \"elseif ${1:#:condition}\\n${0:TARGET}\"}", "description": "elseif ${1:#:condition}\n${0:TARGET}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 8, "menu_template": "", "real_name": "elseif", "action__pattern": "^snippet\\s\\+elseif$", "menu_abbr": ""}, "NeoBundle": {"word": "NeoBundle", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "snip": "NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", "user_data": "{\"snippet_trigger\": \"NeoBundle\", \"snippet\": \"NeoBundle '`getreg('+')=='' ? '<\\\\`0\\\\`>' : getreg('+')`'${0}\"}", "description": "NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 100, "menu_template": "NeoBundle ''", "real_name": "NeoBundle", "action__pattern": "^snippet\\s\\+NeoBundle$", "menu_abbr": "NeoBundle ''"}, "undo_ftplugin": {"word": "undo_ftplugin", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "snip": "if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", "user_data": "{\"snippet_trigger\": \"undo_ftplugin\", \"snippet\": \"if !exists('b:undo_ftplugin')\\nlet b:undo_ftplugin = ''\\nendif\\n\\n${1}\\n\\nlet b:undo_ftplugin .= '\\n\\\\ | setlocal ${2:#:option_name1< option_name2<...}\\n\\\\'\"}", "description": "if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 156, "menu_template": "if !exists('b:undo_ftplugin')", "real_name": "undo_ftplugin", "action__pattern": "^snippet\\s\\+undo_ftplugin$", "menu_abbr": "if !exists('b:undo_ftplugin')"}, "augroup": {"word": "augroup", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "augroup ${1:#:augroup_name}\nautocmd!\nautocmd ${2:#:event}\naugroup END", "user_data": "{\"snippet_trigger\": \"augroup\", \"snippet\": \"augroup ${1:#:augroup_name}\\nautocmd!\\nautocmd ${2:#:event}\\naugroup END\"}", "description": "augroup ${1:#:augroup_name}\nautocmd!\nautocmd ${2:#:event}\naugroup END", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 85, "menu_template": "augroup with autocmds", "real_name": "augroup", "action__pattern": "^snippet\\s\\+augroup$", "menu_abbr": "augroup with autocmds"}, "save_pos": {"word": "save_pos", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "let pos_save = getpos('.')\ntry\n${0}\nfinally\ncall setpos('.', pos_save)\nendtry", "user_data": "{\"snippet_trigger\": \"save_pos\", \"snippet\": \"let pos_save = getpos('.')\\ntry\\n${0}\\nfinally\\ncall setpos('.', pos_save)\\nendtry\"}", "description": "let pos_save = getpos('.')\ntry\n${0}\nfinally\ncall setpos('.', pos_save)\nendtry", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 192, "menu_template": "use pos save", "real_name": "save_pos", "action__pattern": "^snippet\\s\\+save_pos$", "menu_abbr": "use pos save"}, "customlist": {"word": "customlist", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "snip": "function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction", "user_data": "{\"snippet_trigger\": \"customlist\", \"snippet\": \"function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\\nendfunction\"}", "description": "function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction", "action__path": "/Users/stenver/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 78, "menu_template": "customlist complete function", "real_name": "customlist", "action__pattern": "^snippet\\s\\+customlist$", "menu_abbr": "customlist complete function"}}
