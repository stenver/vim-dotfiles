[{"severity":"convention","location":{"begin_pos":2124,"end_pos":2152},"message":"Style/RaiseArgs: Provide an exception object as an argument to `raise`.","cop_name":"Style/RaiseArgs","status":"uncorrected"},{"severity":"warning","location":{"begin_pos":2173,"end_pos":2181},"message":"Lint/Debugger: Remove debugger entry point `debugger`.","cop_name":"Lint/Debugger","status":"uncorrected"},{"severity":"warning","location":{"begin_pos":2258,"end_pos":2265},"message":"Lint/UselessAccessModifier: Useless `private` access modifier.","cop_name":"Lint/UselessAccessModifier","status":"uncorrected"},{"severity":"warning","location":{"begin_pos":2290,"end_pos":2293},"message":"Lint/IneffectiveAccessModifier: `private` (on line 60) does not make singleton methods private. Use `private_class_method` or `private` inside a `class << self` block instead.","cop_name":"Lint/IneffectiveAccessModifier","status":"uncorrected"},{"severity":"warning","location":{"begin_pos":2326,"end_pos":2335},"message":"Lint/UnusedMethodArgument: Unused method argument - `precision`. If it's necessary, use `_` or `_precision` as an argument name to indicate that it won't be used.","cop_name":"Lint/UnusedMethodArgument","status":"uncorrected"}]